'''#include <iostream>
#include <vector>
#include <algorithm>
#include <ctime>

using namespace std;

const int N = 23;
const int i_c = 1000 + (N * 100);
const int MW = 500;

int main()
{
  
  vector<int> i_w;
  srand(time(NULL));
  i_w.push_back(0);
  int t = 0;
  while (t < i_c)
  {
     i_w.push_back(rand() % (10 + N) + 1);
     t++;
  }

  vector<double> i_v(i_c + 1);
  i_v.push_back(0);
  for (int i = 1; i <= i_c; i++)
  {
      i_v[i] = 1 + (rand() % 100 + 1) * 0.01;
  }

  vector<int> b_w;
  b_w.push_back(0);
  t = 1;

  while (t <= MW)
  {
      b_w.push_back(t);
      t++;
  }

  vector<vector<double» b_v(i_c + 1, vector<double>(MW + 1, 0));
  for (int i = 1; i <= i_c; i++)
  {

      for (int j = 1; j < b_w.size(); j++)
      { 

        if (j < i_w[i])
        {
            b_v[i][j] = b_v[i - 1][j];
        }
        else
        {
            b_v[i][j] = max(b_v[i - 1][j], b_v[i - 1][j - i_w[i]] + i_v[i]);
        }
      }
  }

  cout«"Maximum price: "«b_v[i_c][b_w.back()];
  return 0;
}
